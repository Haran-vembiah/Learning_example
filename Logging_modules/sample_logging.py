import logging
from logging.handlers import RotatingFileHandler


# logging.basicConfig(filename='example.log',format='%(asctime)s :%(levelname)s:%(message)s', encoding='utf-8', level=10)
my_logger = logging.getLogger('MyLogger')
my_logger.setLevel(logging.WARNING)
handler = logging.handlers.RotatingFileHandler("example.log", maxBytes=20, backupCount=10)
my_logger.addHandler(handler)
my_logger.debug('This message should go to the log file')
my_logger.info('So should this')
# my_logger.warning('And this, too')
my_logger.warning('%s before you %s', 'Look', 'leap!')
# my_logger.warning(f'{"look"} before you {"leap"}')
my_logger.error('And non-ASCII stuff, too, like Øresund and Malmö')
my_logger.critical('Critical error')
my_logger.debug('This message should go to the log file')
my_logger.info('So should this')
# my_logger.warning('And this, too')
my_logger.warning('%s before you %s', 'Look', 'leap!')
# my_logger.warning(f'{"look"} before you {"leap"}')
my_logger.error('And non-ASCII stuff, too, like Øresund and Malmö')
my_logger.critical('Critical error')
my_logger.debug('This message should go to the log file')
my_logger.info('So should this')
# my_logger.warning('And this, too')
my_logger.warning('%s before you %s', 'Look', 'leap!')
# my_logger.warning(f'{"look"} before you {"leap"}')
my_logger.error('And non-ASCII stuff, too, like Øresund and Malmö')
my_logger.critical('Critical error')
my_logger.debug('This message should go to the log file')
my_logger.info('So should this')
# my_logger.warning('And this, too')
my_logger.warning('%s before you %s', 'Look', 'leap!')
# my_logger.warning(f'{"look"} before you {"leap"}')
my_logger.error('And non-ASCII stuff, too, like Øresund and Malmö')
my_logger.critical('Critical error')
my_logger.debug('This message should go to the log file')
my_logger.info('So should this')
# my_logger.warning('And this, too')
my_logger.warning('%s before you %s', 'Look', 'leap!')
# my_logger.warning(f'{"look"} before you {"leap"}')
my_logger.error('And non-ASCII stuff, too, like Øresund and Malmö')
my_logger.critical('Critical error')
my_logger.debug('This message should go to the log file')
my_logger.info('So should this')
# my_logger.warning('And this, too')
my_logger.warning('%s before you %s', 'Look', 'leap!')
# my_logger.warning(f'{"look"} before you {"leap"}')
my_logger.error('And non-ASCII stuff, too, like Øresund and Malmö')
my_logger.critical('Critical error')


